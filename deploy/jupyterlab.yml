apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jupyter-gschoi
  name: jupyter-gschoi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyter-gschoi
  template:
    metadata:
      labels:
        app: jupyter-gschoi
    spec:
      containers:  
      - command:
        - /bin/bash
        - -c
        - |
          start.sh jupyter lab \
          --core-mode \
          --ServerApp.password='sha256::5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8' \
          --ServerApp.ip='0.0.0.0' \
          --ServerApp.allow_root=False \
          --ServerApp.allow_origin='*' \
          --ServerApp.disable_check_xsrf=True  \
          --ServerApp.cookie_options="max-age=28800" \
          --ServerApp.quit_button=False \
          --ServerApp.root_dir=/home/jovyan/work
          --ServerApp.terminals_enabled=False
        image: cgshome2/torch-notebook:cuda11.3
        imagePullPolicy: Always
        name: jupyter-gschoi
        ports:
        - containerPort: 8888
          protocol: TCP
        resources:
          limits:
            nvidia.com/gpu: "1"
          requests:
            cpu: 250m
            memory: 500Mi
            ephemeral-storage: 20Gi
        volumeMounts:
        - mountPath: /home/jovyan/work
          name: jupyter-data
        - mountPath: /etc/localtime
          name: tz-config
      securityContext:
        runAsUser: 1000
        fsGroup: 100
      imagePullSecrets:
      - name: regcred    
      volumes:
      - name: jupyter-data
        persistentVolumeClaim:
          claimName: jupyter-gschoi-pvc
      - name: tz-config          
        hostPath:
          path: /usr/share/zoneinfo/Asia/Seoul

---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: jupyter-gschoi
  name: jupyter-gschoi
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8888
  selector:
    app: jupyter-gschoi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jupyter-gschoi-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: longhorn

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: jupyter-gschoi
spec:
  rules:
  - host: jupyter-gschoi.yourdomain.com 
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          serviceName: jupyter-gschoi
          servicePort: 80
              
#---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: jupyter-gschoi
#spec:
#  rules:
#  - host: jupyter-gschoi.yourdomain.com
#    http:
#      paths:
#      - path: /
#        pathType: Prefix
#        backend:
#          service: 
#            name: jupyter-gschoi
#            port: 
#              number: 80
